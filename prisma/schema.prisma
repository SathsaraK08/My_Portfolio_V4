// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String?
  image     String?
  isAdmin   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  accounts Account[]
  sessions Session[]

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Skill {
  id          String   @id @default(cuid())
  name        String
  category    String   // e.g., "Frontend", "Backend", "Tools", "Design"
  level       Int      // 1-100 percentage
  icon        String?  // Icon name or URL
  description String?
  order       Int      @default(0)
  isVisible   Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("skills")
}

model Project {
  id          String   @id @default(cuid())
  title       String
  description String
  shortDesc   String?  // Short description for cards
  content     String?  @db.Text // Full project content/details
  image       String?  // Featured image URL
  images      String[] // Additional images
  techStack   String[] // Array of technologies used
  category    String   // e.g., "Web App", "Mobile App", "API", "Website"
  githubUrl   String?
  liveUrl     String?
  status      String   @default("completed") // "completed", "in-progress", "planned"
  featured    Boolean  @default(false)
  order       Int      @default(0)
  isVisible   Boolean  @default(true)
  startDate   DateTime?
  endDate     DateTime?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("projects")
}

model Education {
  id          String    @id @default(cuid())
  institution String
  degree      String
  field       String?
  description String?
  grade       String?   // GPA or grade
  startDate   DateTime
  endDate     DateTime?
  isCurrent   Boolean   @default(false)
  location    String?
  achievements String[] // Array of achievements
  order       Int       @default(0)
  isVisible   Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@map("education")
}

model Certificate {
  id           String   @id @default(cuid())
  title        String
  issuer       String   // Organization that issued the certificate
  description  String?
  image        String?  // Certificate image URL
  credentialId String?  // Certificate credential ID
  credentialUrl String? // URL to verify certificate
  issueDate    DateTime
  expiryDate   DateTime?
  skills       String[] // Skills covered by this certificate
  category     String?  // e.g., "Cloud", "Development", "Design"
  isVerified   Boolean  @default(false)
  order        Int      @default(0)
  isVisible    Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("certificates")
}

model Message {
  id        String      @id @default(cuid())
  name      String
  email     String
  subject   String?
  message   String      @db.Text
  status    MessageStatus @default(UNREAD)
  isArchived Boolean    @default(false)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  @@map("messages")
}

model Profile {
  id          String   @id @default(cuid())
  fullName    String
  title       String   // e.g., "Full Stack Developer"
  bio         String   @db.Text
  avatar      String?
  resume      String?  // Resume file URL
  location    String?
  email       String
  phone       String?
  website     String?
  linkedIn    String?
  github      String?
  twitter     String?
  instagram   String?
  youTube     String?
  isVisible   Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("profiles")
}

enum MessageStatus {
  UNREAD
  READ
  REPLIED
  ARCHIVED
}
